---
:description: Generated sheet for gdb
:tags:
- community
:shortcuts:
  :defaults:
    'To start the debugger:': "gdb <executable>, gdb --args <executable> [<args>...],
      gdb -p <pid>\n\n"
    'To exit gdb (after program terminated):': "q, quit\n\n"
    'To set a breakpoint at a function:': "b, break <function>\n\n"
    'To set a (conditional) breakpoint at a general location:': |+
      b, break <loc> [if <condition>]
        with <loc> as <function>|<file>:<line>|<line>|*<address>|-offset|+offset

    'To set a watchpoint, i.e., stop when expression changes its value:': "watch <expr>\n\n"
    'To show all breakpoints and watchpoints:': "info breakpoints, info watchpoints\n\n"
    'To delete all or given breakpoints and watchpoints:': |+
      clear, delete
      delete <num>
      clear <loc>
        with <loc> as <function>|<file>:<line>|<line>|*<address>|-offset|+offset

    'To disable a breakpoint:': "dis, disable <num>\n\n"
    'To run the program, optionally with arguments for the program:': "r, run [<args>]\n\n"
    'To run the current line, stepping over any invocations:': "n, next\n\n"
    'To run the current line, stepping into any invocations:': "s, step\n\n"
    'To run until the next line below, i.e., without new loop iteration:': "u, until\n\n"
    'Like run, but stop at the first machine instruction:': "starti\n\n"
    To step or go to next line by a machine instruction: |+
      si, stepi
      ni, nexti

    To run until given location is reached: |+
      advance <loc>
        with <loc> as <function>|<file>:<line>|<line>|*<address>|-offset|+offset

    'To run until function ends, i.e., jump out of a function:': "fin, finish\n\n"
    'To continue execution:': "c, continue\n\n"
    'To print a stacktrace, optionally with local variables:': "bt, backtrace [full]\n\n"
    'Move to stack frame of given number or a frame up or down:': "frame <num>, up,
      down\n\n"
    'To show summary info on selected frame:': "info frame\n\n"
    'To print the arguments or local variables to the current function:': "info args,
      info locals\n\n"
    'To print the registers:': "info registers\n\n"
    'To print a list of all the threads:': "info threads\n\n"
    'To print a list of all the loaded shared libraries:': "info sharedlibrary\n\n"
    'To evaluate an expression and print the result:': "p length=strlen(string)\n\n"
    'To print an array of given length:': "p *<array>@<len>\n\n"
    'Examine content at address with a format and letter size:': |+
      x/<count><fmt><size> <address>
          ------- <fmt> ------    ------- <size> -------
          a | Address             b | 8 bits  - byte
          i | Instruction         h | 16 bits - halfword
          t | Binary              w | 32 bits - word
          o | Octal               g | 64 bits - giant
          h | Hex
          z | Hex, zero padded
          d | Decimal
          u | Unsigned decimal
          f | Float
          c | Char
          s | String

    'To list surrounding source code:': "l, list\n\n"
    'Disassemble the current or given function:': |+
      disas, disassemble [/m] [<func>]
        with /m to show mixed source

    'Disassemble the given address range:': |+
      disas <start>,<end>
      disas <start>,+<length>

    To specify a given register, program counter, frame pointer, stack pointer: "$reg,
      $pc, $fp, $sp\n\n"
    'To enable pretty print of arrays and more:': "set pretty print on\n\n"
    'To toggle TUI mode:': "C-x C-a, C-x a, C-x A\n\n"
    'To use a TUI layout with only one window:': "C-x 1\n\n"
    'To use a TUI layout with two windows:': "C-x 2\n\n"
    'To change active window:': "C-x o\n\n"
    'To Switch in and out of the TUI SingleKey mode:': 'C-x s

      '
...
