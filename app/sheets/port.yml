---
:description: Generated sheet for port
:tags:
- community
- deps
- mac
:shortcuts:
  :defaults:
    'Update to the latest version of MacPorts, and sync the latest ports definitions:': "sudo
      port selfupdate\n\n"
    'List all ports that are currently considered outdated:': "port echo outdated\n\n"
    'Upgrade all currently outdated ports:': "sudo port upgrade outdated\n\n"
    "(A port is usually deactivated when a newer version of it gets installed.)": "port
      echo inactive\n\n"
    This is very useful to do after upgrading all your outdated ports.: "sudo port
      uninstall inactive\n\n"
    'Install a particular port:': "sudo port install <name>\n\n"
    'Install a particular port with full debug output:': "sudo port -d install <name>\n\n"
    'Uninstall a particular port:': "sudo port uninstall <name>\n\n"
    'the working directory and any downloaded archives:': "sudo port clean -f --all
      <name>\n\n"
    Upgrade a particular port: "sudo port upgrade <name>\n\n"
    'Deactivate a currently active port:': "sudo port deactivate <name>\n\n"
    'Activate a currently deactive port:': "sudo port activate <name>\n\n"
    Search for a port: "port search <name>\n\n"
    View information about a particular port: "port info <name>\n\n"
    'List the ports that have been explicitly requested by the user to be installed:': "port
      echo requested\n\n"
    'List all ports that are currently installed:': "port echo installed\n\n"
    'List the ports that this port depends on:': "port deps <name>\n\n"
    'that THOSE ports depend on as well:': "port rdeps <name>\n\n"
    'List the ports that depend on this port:': "port dependents <name>\n\n"
    'that depend on THOSE:': "port rdependents <name>\n\n"
    "(Only works for currently installed ports.)": "port contents <name>\n\n"
    'is installed):': "port notes <name>\n\n"
    'Print the path to a port within the ports tree:': "port dir <name>\n\n"
    "(Only works for currently installed ports)": "port location <name>\n\n"
    'Print the path to a ports'' Portfile:': "port file <name>\n\n"
    'Print the path to the working directory for a port, if it exists:': "port work
      <name>\n\n"
    'View help on a sub-command:': 'port help <command>

      '
